
import json

class Task:
    def __init__(self, description):
        self.description = description

    def __str__(self):
        return self.description

class ToDoList:
    def __init__(self):
        self.tasks = []

    def add_task(self, description):
        if not description.strip():
            print("Ошибка: описание задачи не может быть пустым.")
            return
        new_task = Task(description.strip())
        self.tasks.append(new_task)
        print(f"Задача '{description.strip()}' успешно добавлена.")

    def view_tasks(self):
        if not self.tasks:
            print("Нет доступных задач.")
        else:
            print("Ваши задачи:")
            for idx, task in enumerate(self.tasks, start=1):
                print(f"{idx}. {task}")

    def delete_task(self, task_number):
        if 1 <= task_number <= len(self.tasks):
            removed_task = self.tasks.pop(task_number - 1)
            print(f"Задача '{removed_task}' успешно удалена.")
        else:
            print("Неверный номер задачи.")

    def save_to_file(self, filename):
        with open(filename, 'w') as file:
            json.dump([task.description for task in self.tasks], file)
        print(f"Задачи сохранены в файл {filename}.")

    def load_from_file(self, filename):
        try:
            with open(filename, 'r') as file:
                tasks = json.load(file)
                self.tasks = [Task(description) for description in tasks]
            print(f"Задачи загружены из файла {filename}.")
        except FileNotFoundError:
            print(f"Файл {filename} не найден.")

# Main program
def main():
    todo_list = ToDoList()
    filename = "tasks.json"
    
    while True:
        print("\nМеню:")
        print("1. Добавить задачу")
        print("2. Показать задачи")
        print("3. Удалить задачу")
        print("4. Сохранить задачи")
        print("5. Загрузить задачи")
        print("6. Выход")


        choice = input("Введите ваш выбор: ")
        
        if choice == "1":
            description = input("Введите описание задачи: ")
            todo_list.add_task(description)
        elif choice == "2":
            todo_list.view_tasks()
        elif choice == "3":
            try:
                task_number = int(input("Введите номер задачи для удаления: "))
                todo_list.delete_task(task_number)
            except ValueError:
                print("Ошибка: пожалуйста, введите корректный номер.")
        elif choice == "4":
            todo_list.save_to_file(filename)
        elif choice == "5":
            todo_list.load_from_file(filename)
        elif choice == "6":
            print("Выход из программы. До свидания!")
            break
        else:
            print("Неверный выбор. Пожалуйста, попробуйте снова.")

if __name__ == "__main__":
    main()
